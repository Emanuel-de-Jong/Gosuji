@page "/contact"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

@using Gosuji.Client.Data;

<PageTitle>Contact</PageTitle>

<div id="contactPage">
    <div class="page-layout">
        <h1 class="contact-header">Contact</h1>
        <!-- Explanation and Description of the page -->
        <div class="contact-description">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
            Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
            Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
        </div>

        <!-- Contact information -->
        <div class="contact-information">
            <div>Author: Emanual de Jong</div>
            <div>Email: bob@bob.com</div>
            <div>Company: Crystal Panda Studio</div>
        </div>

        @if (isNotLoggedIn)
        {
            <div>
                <p class="notLoggedInMessage">You need an account to send a message.</p>
            </div>
        }
        
        <!-- Feedback and Questions form -->
        <EditForm Model="input" OnValidSubmit="SendFeedback" FormName="send-feedback" method="post">
            <DataAnnotationsValidator />
            <div class="feedback-container">
                <div class="feedback-subcontainer">
                    <div class="feedback-subsubcontainer">
                        <h4 class="feedback-header">Feedback</h4>
                        <label for="subject-input" class="subject-label">Subject</label>
                        <InputText @bind-Value="input.Subject" type="text" class="subject-content" name="subject-input" id="subject-input" disabled="@isNotLoggedIn" />
                        <ValidationMessage For="() => input.Subject" class="text-danger" />
                    </div>

                    <div class="feedback-type-container">
                        <h5 class="feedback-type-header">Type</h5>
                        <ul class="feedback-type-list">
                            <InputRadioGroup @bind-Value="input.FeedbackType">
                                @foreach (EFeedbackType feedbackType in Enum.GetValues<EFeedbackType>())
                                {
                                    <li class="feedback-element">
                                        <InputRadio Value="feedbackType" id="@feedbackType" disabled="@isNotLoggedIn" />
                                        <label for="@feedbackType">@feedbackType</label>
                                    </li>
                                }
                            </InputRadioGroup>
                        </ul>
                    </div>
                </div>

                <div class="text-submit-container">
                    <InputTextArea @bind-Value="input.Message" class="feedback-content-input" name="feedback-content" id="feedback-content" placeholder="Please enter your Feedback here" cols="40" rows="7" disabled="@isNotLoggedIn"></InputTextArea>
                    <ValidationMessage For="() => input.Message" class="text-danger" />

                    <button type="submit" class="btn btn-primary feedback_submit" disabled="@isNotLoggedIn">Confirm</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>
