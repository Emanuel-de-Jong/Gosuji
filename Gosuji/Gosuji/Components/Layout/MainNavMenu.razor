@using System.Security.Claims

@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider

<div id="mainNavBar" class="top-row px-4 auth">
    <div class="navItem">
        <a href="">Home</a>
    </div>

    <div class="navItem">
        <a href="learn">Learn</a>
    </div>

    <div class="navItem">
        <a href="subscription">Subscriptions</a>
    </div>

    <div class="navItem">
        <a href="contact">Contact</a>
    </div>

    <AuthorizeView>
        <Authorized>
            <div class="navItem">
                <a href="user/@claimsPrincipal.Identity?.Name">Profile</a>
            </div>
        </Authorized>
        <NotAuthorized>

            <div class="navItem">
                <a href="Account/Register">Register</a>
            </div>

            <div class="navItem">
                <a href="Account/Login">Login</a>
            </div>
        </NotAuthorized>
    </AuthorizeView>

    <div class="navItem">
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="darkThemeSwitch" checked>
            <label class="form-check-label" for="darkThemeSwitch">Dark theme</label>
        </div>
    </div>
</div>

@code {
    private ClaimsPrincipal claimsPrincipal;

    protected override async Task OnInitializedAsync()
    {
        claimsPrincipal = (await authenticationStateProvider.GetAuthenticationStateAsync()).User;
    }
}

