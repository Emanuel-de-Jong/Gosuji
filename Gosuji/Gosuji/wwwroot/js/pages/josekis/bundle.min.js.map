{"version":3,"file":"bundle.min.js","sources":["josekis.js","classes/JosekisBoard.js"],"sourcesContent":["if (typeof josekisPage === \"undefined\") {\r\n    var josekisPage = {};\r\n\r\n    josekisPage.init = function (josekisRef) {\r\n        josekisPage.josekisRef = josekisRef;\r\n\r\n        josekisPage.board = new JosekisBoard();\r\n        josekisPage.board.init(19, 0);\r\n\r\n        document.querySelector('button[title=\"Previous node\"]').addEventListener(\"click\", async () => { await josekisRef.invokeMethodAsync(\"Prev\") });\r\n    };\r\n}","class JosekisBoard extends Board {\r\n    constructor() {\r\n        super();\r\n\r\n        this.besogoOptions.panels = \"control\";\r\n        this.besogoOptions.tool = \"cross\";\r\n    }\r\n\r\n    init(boardsize, handicap, sgf) {\r\n        super.init(boardsize, handicap, sgf);\r\n    }\r\n\r\n    clear(boardsize, handicap, sgf) {\r\n        super.clear(boardsize, handicap, sgf);\r\n\r\n        document.querySelector('button[title=\"Jump back\"]').remove();\r\n        document.querySelector('button[title=\"Next node\"]').remove();\r\n        document.querySelector('button[title=\"Jump forward\"]').remove();\r\n        document.querySelector('button[title=\"Last node\"]').remove();\r\n        document.querySelector('button[title=\"Previous sibling\"]').remove();\r\n        document.querySelector('button[title=\"Next sibling\"]').remove();\r\n        document.querySelector('button[title=\"Variants: [child]/sibling\"]').remove();\r\n        document.querySelector('button[title=\"Variants: show/[hide]\"]').remove();\r\n\r\n        document.querySelector('button[title=\"First node\"]').insertAdjacentHTML(\"afterend\",\r\n            `<button class=\"lastBranchBtn\">\r\n                <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\r\n                    <polygon points=\"95,10 50,50 50,10 5,50 50,90 50,50 95,90\" stroke=\"none\"></polygon>\r\n                </svg>\r\n            </button>`\r\n        );\r\n        document.querySelector('button[title=\"Previous node\"]').insertAdjacentHTML(\"afterend\", '<button style=\"width: 50px\" class=\"passBtn\">Pass</button>');\r\n\r\n        document.querySelector(\".passBtn\").addEventListener(\"click\", async () => { await josekisPage.josekisRef.invokeMethodAsync(\"Pass\"); });\r\n        document.querySelector(\".lastBranchBtn\").addEventListener(\"click\", async () => { await josekisPage.josekisRef.invokeMethodAsync(\"LastBranch\"); });\r\n        document.querySelector('button[title=\"First node\"]').addEventListener(\"click\", async () => { await josekisPage.josekisRef.invokeMethodAsync(\"First\"); });\r\n        this.editor.addListener(this.crossPlacedListener);\r\n    }\r\n\r\n    clearFuture() {\r\n        this.editor.getCurrent().children = [];\r\n    }\r\n\r\n    addMarkup(x, y, markup) {\r\n        this.editor.getCurrent().markup[(x - 1) * 19 + (y - 1)] = markup;\r\n    }\r\n\r\n    redraw() {\r\n        this.editor.notifyListeners({ markupChange: true });\r\n    }\r\n\r\n    crossPlacedListener = async (event) => {\r\n        if (event.markupChange && event.mark == 4) {\r\n            this.removeMarkup(new Coord(event.x, event.y));\r\n            this.editor.notifyListeners({ stoneChange: true });\r\n\r\n            await josekisPage.josekisRef.invokeMethodAsync(\"Next\", event.x - 1, event.y - 1);\r\n        }\r\n    }\r\n}\r\n"],"names":["josekisPage","josekisRef","board","JosekisBoard","init","document","querySelector","addEventListener","async","invokeMethodAsync","Board"],"mappings":"AAAA,QAA2B,IAAhBA,EACP,IAAIA,EAAc,CAElBA,KAAmB,SAAUC,GACzBD,EAAYC,WAAaA,EAEzBD,EAAYE,MAAQ,IAAIC,aACxBH,EAAYE,MAAME,KAAK,GAAI,GAE3BC,SAASC,cAAc,iCAAiCC,iBAAiB,SAASC,gBAAoBP,EAAWQ,kBAAkB,OAAM,GACjJ,GCV2BC"}